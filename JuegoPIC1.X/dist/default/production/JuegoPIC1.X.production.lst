

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 21 21:57:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     000C                     _PIR1bits	set	12
   287     0018                     _RCSTAbits	set	24
   288     0006                     _PORTB	set	6
   289     0019                     _TXREG	set	25
   290     000B                     _INTCONbits	set	11
   291     0006                     _PORTBbits	set	6
   292     0058                     _RBIF	set	88
   293     0098                     _TXSTAbits	set	152
   294     0099                     _SPBRG	set	153
   295     0081                     _OPTION_REGbits	set	129
   296     0096                     _IOCBbits	set	150
   297     0095                     _WPUBbits	set	149
   298     0086                     _TRISB	set	134
   299     008F                     _OSCCONbits	set	143
   300     0187                     _BAUDCTLbits	set	391
   301     0189                     _ANSELH	set	393
   302     0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305     000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308     000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311     000F  01F4               	clrf	__pbssCOMMON& (0+127)
   312     0010                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315     0010                     __end_of__initialization:
   316     0010  0183               	clrf	3
   317     0011  120A  118A  2918   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320     0074                     __pbssCOMMON:
   321     0074                     _accion:
   322     0074                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325     0070                     __pcstackCOMMON:
   326     0070                     ?_setup:
   327     0070                     ?_initUART:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_setupINTOSC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344     0070                     	ds	3
   345     0073                     ??_setup:
   346     0073                     ??_initUART:	
   347                           ; 1 bytes @ 0x3
   348                           
   349     0073                     ??_setupINTOSC:	
   350                           ; 1 bytes @ 0x3
   351                           
   352     0073                     setupINTOSC@IRCF:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357     0073                     	ds	1
   358     0074                     ??_main:
   359                           
   360                           	psect	maintext
   361     0118                     __pmaintext:	
   362                           ; 1 bytes @ 0x4
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 121 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		_initUART
   390 ;;		_setup
   391 ;;		_setupINTOSC
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397     0118                     _main:	
   398                           ;psect for function _main
   399                           
   400     0118                     l781:	
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403                           
   404                           
   405                           ;main.c: 122:     setupINTOSC(3);
   406     0118  3003               	movlw	3
   407     0119  120A  118A  2085  120A  118A  	fcall	_setupINTOSC
   408                           
   409                           ;main.c: 123:     setup();
   410     011E  120A  118A  20E4  120A  118A  	fcall	_setup
   411                           
   412                           ;main.c: 124:     initUART();
   413     0123  120A  118A  2102  120A  118A  	fcall	_initUART
   414     0128                     l76:	
   415                           ;main.c: 125:     while(1){
   416                           
   417     0128                     l77:	
   418                           ;main.c: 127:     }
   419                           
   420     0128  2928               	goto	l76
   421     0129  120A  118A  280C   	ljmp	start
   422     012C                     __end_of_main:
   423                           
   424                           	psect	text1
   425     0085                     __ptext1:	
   426 ;; *************** function _setupINTOSC *****************
   427 ;; Defined at:
   428 ;;		line 10 in file "oscilador.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  IRCF            1    wreg     unsigned char 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  IRCF            1    3[COMMON] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         1       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0
   445 ;;      Totals:         1       0       0       0       0
   446 ;;Total ram usage:        1 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     0085                     _setupINTOSC:	
   457                           ;psect for function _setupINTOSC
   458                           
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   462                           ;setupINTOSC@IRCF stored from wreg
   463     0085  00F3               	movwf	setupINTOSC@IRCF
   464     0086                     l677:
   465                           
   466                           ;oscilador.c: 11:     if (IRCF == 7){
   467     0086  3007               	movlw	7
   468     0087  0673               	xorwf	setupINTOSC@IRCF,w
   469     0088  1D03               	btfss	3,2
   470     0089  288B               	goto	u11
   471     008A  288C               	goto	u10
   472     008B                     u11:
   473     008B  2890               	goto	l5
   474     008C                     u10:
   475     008C                     l679:
   476                           
   477                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   478     008C  3070               	movlw	112
   479     008D  1683               	bsf	3,5	;RP0=1, select bank1
   480     008E  1303               	bcf	3,6	;RP1=0, select bank1
   481     008F  048F               	iorwf	15,f	;volatile
   482     0090                     l5:	
   483                           ;oscilador.c: 13:     }
   484                           
   485                           
   486                           ;oscilador.c: 14:     if (IRCF == 6){
   487     0090  3006               	movlw	6
   488     0091  0673               	xorwf	setupINTOSC@IRCF,w
   489     0092  1D03               	btfss	3,2
   490     0093  2895               	goto	u21
   491     0094  2896               	goto	u20
   492     0095                     u21:
   493     0095  289C               	goto	l6
   494     0096                     u20:
   495     0096                     l681:
   496                           
   497                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   498     0096  1683               	bsf	3,5	;RP0=1, select bank1
   499     0097  1303               	bcf	3,6	;RP1=0, select bank1
   500     0098  080F               	movf	15,w	;volatile
   501     0099  398F               	andlw	-113
   502     009A  3860               	iorlw	96
   503     009B  008F               	movwf	15	;volatile
   504     009C                     l6:	
   505                           ;oscilador.c: 16:     }
   506                           
   507                           
   508                           ;oscilador.c: 17:     if (IRCF == 5){
   509     009C  3005               	movlw	5
   510     009D  0673               	xorwf	setupINTOSC@IRCF,w
   511     009E  1D03               	btfss	3,2
   512     009F  28A1               	goto	u31
   513     00A0  28A2               	goto	u30
   514     00A1                     u31:
   515     00A1  28A8               	goto	l7
   516     00A2                     u30:
   517     00A2                     l683:
   518                           
   519                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   520     00A2  1683               	bsf	3,5	;RP0=1, select bank1
   521     00A3  1303               	bcf	3,6	;RP1=0, select bank1
   522     00A4  080F               	movf	15,w	;volatile
   523     00A5  398F               	andlw	-113
   524     00A6  3850               	iorlw	80
   525     00A7  008F               	movwf	15	;volatile
   526     00A8                     l7:	
   527                           ;oscilador.c: 19:     }
   528                           
   529                           
   530                           ;oscilador.c: 20:     if (IRCF == 4){
   531     00A8  3004               	movlw	4
   532     00A9  0673               	xorwf	setupINTOSC@IRCF,w
   533     00AA  1D03               	btfss	3,2
   534     00AB  28AD               	goto	u41
   535     00AC  28AE               	goto	u40
   536     00AD                     u41:
   537     00AD  28B4               	goto	l8
   538     00AE                     u40:
   539     00AE                     l685:
   540                           
   541                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   542     00AE  1683               	bsf	3,5	;RP0=1, select bank1
   543     00AF  1303               	bcf	3,6	;RP1=0, select bank1
   544     00B0  080F               	movf	15,w	;volatile
   545     00B1  398F               	andlw	-113
   546     00B2  3840               	iorlw	64
   547     00B3  008F               	movwf	15	;volatile
   548     00B4                     l8:	
   549                           ;oscilador.c: 22:     }
   550                           
   551                           
   552                           ;oscilador.c: 23:     if (IRCF == 3){
   553     00B4  3003               	movlw	3
   554     00B5  0673               	xorwf	setupINTOSC@IRCF,w
   555     00B6  1D03               	btfss	3,2
   556     00B7  28B9               	goto	u51
   557     00B8  28BA               	goto	u50
   558     00B9                     u51:
   559     00B9  28C0               	goto	l9
   560     00BA                     u50:
   561     00BA                     l687:
   562                           
   563                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   564     00BA  1683               	bsf	3,5	;RP0=1, select bank1
   565     00BB  1303               	bcf	3,6	;RP1=0, select bank1
   566     00BC  080F               	movf	15,w	;volatile
   567     00BD  398F               	andlw	-113
   568     00BE  3830               	iorlw	48
   569     00BF  008F               	movwf	15	;volatile
   570     00C0                     l9:	
   571                           ;oscilador.c: 25:     }
   572                           
   573                           
   574                           ;oscilador.c: 26:     if (IRCF == 2){
   575     00C0  3002               	movlw	2
   576     00C1  0673               	xorwf	setupINTOSC@IRCF,w
   577     00C2  1D03               	btfss	3,2
   578     00C3  28C5               	goto	u61
   579     00C4  28C6               	goto	u60
   580     00C5                     u61:
   581     00C5  28CC               	goto	l10
   582     00C6                     u60:
   583     00C6                     l689:
   584                           
   585                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   586     00C6  1683               	bsf	3,5	;RP0=1, select bank1
   587     00C7  1303               	bcf	3,6	;RP1=0, select bank1
   588     00C8  080F               	movf	15,w	;volatile
   589     00C9  398F               	andlw	-113
   590     00CA  3820               	iorlw	32
   591     00CB  008F               	movwf	15	;volatile
   592     00CC                     l10:	
   593                           ;oscilador.c: 28:     }
   594                           
   595                           
   596                           ;oscilador.c: 29:     if (IRCF == 1){
   597     00CC  0373               	decf	setupINTOSC@IRCF,w
   598     00CD  1D03               	btfss	3,2
   599     00CE  28D0               	goto	u71
   600     00CF  28D1               	goto	u70
   601     00D0                     u71:
   602     00D0  28D7               	goto	l11
   603     00D1                     u70:
   604     00D1                     l691:
   605                           
   606                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
   607     00D1  1683               	bsf	3,5	;RP0=1, select bank1
   608     00D2  1303               	bcf	3,6	;RP1=0, select bank1
   609     00D3  080F               	movf	15,w	;volatile
   610     00D4  398F               	andlw	-113
   611     00D5  3810               	iorlw	16
   612     00D6  008F               	movwf	15	;volatile
   613     00D7                     l11:	
   614                           ;oscilador.c: 31:     }
   615                           
   616                           
   617                           ;oscilador.c: 32:     if (IRCF == 0){
   618     00D7  0873               	movf	setupINTOSC@IRCF,w
   619     00D8  1D03               	btfss	3,2
   620     00D9  28DB               	goto	u81
   621     00DA  28DC               	goto	u80
   622     00DB                     u81:
   623     00DB  28E0               	goto	l695
   624     00DC                     u80:
   625     00DC                     l693:
   626                           
   627                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
   628     00DC  308F               	movlw	-113
   629     00DD  1683               	bsf	3,5	;RP0=1, select bank1
   630     00DE  1303               	bcf	3,6	;RP1=0, select bank1
   631     00DF  058F               	andwf	15,f	;volatile
   632     00E0                     l695:
   633                           
   634                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
   635     00E0  1683               	bsf	3,5	;RP0=1, select bank1
   636     00E1  1303               	bcf	3,6	;RP1=0, select bank1
   637     00E2  140F               	bsf	15,0	;volatile
   638     00E3                     l13:
   639     00E3  0008               	return
   640     00E4                     __end_of_setupINTOSC:
   641                           
   642                           	psect	text2
   643     00E4                     __ptext2:	
   644 ;; *************** function _setup *****************
   645 ;; Defined at:
   646 ;;		line 133 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674     00E4                     _setup:	
   675                           ;psect for function _setup
   676                           
   677     00E4                     l697:	
   678                           ;incstack = 0
   679                           ; Regs used in _setup: [wreg+status,2]
   680                           
   681                           
   682                           ;main.c: 135:     ANSEL = 0;
   683     00E4  1683               	bsf	3,5	;RP0=1, select bank3
   684     00E5  1703               	bsf	3,6	;RP1=1, select bank3
   685     00E6  0188               	clrf	8	;volatile
   686                           
   687                           ;main.c: 136:     ANSELH = 0;
   688     00E7  0189               	clrf	9	;volatile
   689     00E8                     l699:
   690                           
   691                           ;main.c: 137:     TRISB = 0b00111111;
   692     00E8  303F               	movlw	63
   693     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   694     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   695     00EB  0086               	movwf	6	;volatile
   696     00EC                     l701:
   697                           
   698                           ;main.c: 138:     PORTB = 0;
   699     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   700     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   701     00EE  0186               	clrf	6	;volatile
   702     00EF                     l703:
   703                           
   704                           ;main.c: 140:     INTCONbits.RBIE = 1;
   705     00EF  158B               	bsf	11,3	;volatile
   706     00F0                     l705:
   707                           
   708                           ;main.c: 141:     INTCONbits.RBIF = 0;
   709     00F0  100B               	bcf	11,0	;volatile
   710     00F1                     l707:
   711                           
   712                           ;main.c: 142:     INTCONbits.GIE = 1;
   713     00F1  178B               	bsf	11,7	;volatile
   714     00F2                     l709:
   715                           
   716                           ;main.c: 144:     WPUBbits.WPUB0 = 1;
   717     00F2  1683               	bsf	3,5	;RP0=1, select bank1
   718     00F3  1303               	bcf	3,6	;RP1=0, select bank1
   719     00F4  1415               	bsf	21,0	;volatile
   720     00F5                     l711:
   721                           
   722                           ;main.c: 145:     IOCBbits.IOCB0 = 1;
   723     00F5  1416               	bsf	22,0	;volatile
   724     00F6                     l713:
   725                           
   726                           ;main.c: 146:     WPUBbits.WPUB1 = 1;
   727     00F6  1495               	bsf	21,1	;volatile
   728     00F7                     l715:
   729                           
   730                           ;main.c: 147:     IOCBbits.IOCB1 = 1;
   731     00F7  1496               	bsf	22,1	;volatile
   732     00F8                     l717:
   733                           
   734                           ;main.c: 148:     WPUBbits.WPUB2 = 1;
   735     00F8  1515               	bsf	21,2	;volatile
   736     00F9                     l719:
   737                           
   738                           ;main.c: 149:     IOCBbits.IOCB2 = 1;
   739     00F9  1516               	bsf	22,2	;volatile
   740     00FA                     l721:
   741                           
   742                           ;main.c: 150:     WPUBbits.WPUB3 = 1;
   743     00FA  1595               	bsf	21,3	;volatile
   744     00FB                     l723:
   745                           
   746                           ;main.c: 151:     IOCBbits.IOCB3 = 1;
   747     00FB  1596               	bsf	22,3	;volatile
   748     00FC                     l725:
   749                           
   750                           ;main.c: 152:     WPUBbits.WPUB4 = 1;
   751     00FC  1615               	bsf	21,4	;volatile
   752     00FD                     l727:
   753                           
   754                           ;main.c: 153:     IOCBbits.IOCB4 = 1;
   755     00FD  1616               	bsf	22,4	;volatile
   756     00FE                     l729:
   757                           
   758                           ;main.c: 154:     WPUBbits.WPUB5 = 1;
   759     00FE  1695               	bsf	21,5	;volatile
   760     00FF                     l731:
   761                           
   762                           ;main.c: 155:     IOCBbits.IOCB5 = 1;
   763     00FF  1696               	bsf	22,5	;volatile
   764     0100                     l733:
   765                           
   766                           ;main.c: 157:     OPTION_REGbits.nRBPU = 0;
   767     0100  1381               	bcf	1,7	;volatile
   768     0101                     l82:
   769     0101  0008               	return
   770     0102                     __end_of_setup:
   771                           
   772                           	psect	text3
   773     0102                     __ptext3:	
   774 ;; *************** function _initUART *****************
   775 ;; Defined at:
   776 ;;		line 166 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804     0102                     _initUART:	
   805                           ;psect for function _initUART
   806                           
   807     0102                     l735:	
   808                           ;incstack = 0
   809                           ; Regs used in _initUART: [wreg]
   810                           
   811                           
   812                           ;main.c: 168:     SPBRG = 12;
   813     0102  300C               	movlw	12
   814     0103  1683               	bsf	3,5	;RP0=1, select bank1
   815     0104  1303               	bcf	3,6	;RP1=0, select bank1
   816     0105  0099               	movwf	25	;volatile
   817     0106                     l737:
   818                           
   819                           ;main.c: 170:     TXSTAbits.SYNC = 0;
   820     0106  1218               	bcf	24,4	;volatile
   821     0107                     l739:
   822                           
   823                           ;main.c: 171:     RCSTAbits.SPEN = 1;
   824     0107  1283               	bcf	3,5	;RP0=0, select bank0
   825     0108  1303               	bcf	3,6	;RP1=0, select bank0
   826     0109  1798               	bsf	24,7	;volatile
   827     010A                     l741:
   828                           
   829                           ;main.c: 173:     TXSTAbits.BRGH = 1;
   830     010A  1683               	bsf	3,5	;RP0=1, select bank1
   831     010B  1303               	bcf	3,6	;RP1=0, select bank1
   832     010C  1518               	bsf	24,2	;volatile
   833     010D                     l743:
   834                           
   835                           ;main.c: 174:     BAUDCTLbits.BRG16 = 1;
   836     010D  1683               	bsf	3,5	;RP0=1, select bank3
   837     010E  1703               	bsf	3,6	;RP1=1, select bank3
   838     010F  1587               	bsf	7,3	;volatile
   839     0110                     l745:
   840                           
   841                           ;main.c: 176:     TXSTAbits.TXEN = 1;
   842     0110  1683               	bsf	3,5	;RP0=1, select bank1
   843     0111  1303               	bcf	3,6	;RP1=0, select bank1
   844     0112  1698               	bsf	24,5	;volatile
   845     0113                     l747:
   846                           
   847                           ;main.c: 177:     PIR1bits.TXIF = 0;
   848     0113  1283               	bcf	3,5	;RP0=0, select bank0
   849     0114  1303               	bcf	3,6	;RP1=0, select bank0
   850     0115  120C               	bcf	12,4	;volatile
   851     0116                     l749:
   852                           
   853                           ;main.c: 178:     RCSTAbits.CREN = 1;
   854     0116  1618               	bsf	24,4	;volatile
   855     0117                     l85:
   856     0117  0008               	return
   857     0118                     __end_of_initUART:
   858                           
   859                           	psect	text4
   860     0014                     __ptext4:	
   861 ;; *************** function _isr *****************
   862 ;; Defined at:
   863 ;;		line 50 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          3       0       0       0       0
   880 ;;      Totals:         3       0       0       0       0
   881 ;;Total ram usage:        3 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		Interrupt level 1
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     0014                     _isr:	
   891                           ;psect for function _isr
   892                           
   893     0014                     i1l751:
   894                           
   895                           ;main.c: 53:     if (RBIF == 1){
   896     0014  1C0B               	btfss	11,0	;volatile
   897     0015  2817               	goto	u9_21
   898     0016  2818               	goto	u9_20
   899     0017                     u9_21:
   900     0017  287E               	goto	i1l71
   901     0018                     u9_20:
   902     0018                     i1l753:
   903                           
   904                           ;main.c: 63:         if (PORTBbits.RB1 == 0){
   905     0018  1283               	bcf	3,5	;RP0=0, select bank0
   906     0019  1303               	bcf	3,6	;RP1=0, select bank0
   907     001A  1886               	btfsc	6,1	;volatile
   908     001B  281D               	goto	u10_21
   909     001C  281E               	goto	u10_20
   910     001D                     u10_21:
   911     001D  282D               	goto	i1l61
   912     001E                     u10_20:
   913     001E                     i1l755:
   914                           
   915                           ;main.c: 64:             _delay((unsigned long)((10)*(500000/4000.0)));
   916     001E  30F9               	movlw	249
   917     001F  00F0               	movwf	??_isr
   918     0020                     u15_27:
   919     0020  2821               	nop2
   920     0021  0BF0               	decfsz	??_isr,f
   921     0022  2820               	goto	u15_27
   922     0023  2824               	nop2
   923     0024  2825               	nop2
   924                           
   925                           ;main.c: 67:             accion = 2;
   926     0025  3002               	movlw	2
   927     0026  00F4               	movwf	_accion
   928     0027                     i1l757:
   929                           
   930                           ;main.c: 68:             INTCONbits.RBIF = 0;
   931     0027  100B               	bcf	11,0	;volatile
   932                           
   933                           ;main.c: 69:             TXREG = accion;
   934     0028  0874               	movf	_accion,w
   935     0029  1283               	bcf	3,5	;RP0=0, select bank0
   936     002A  1303               	bcf	3,6	;RP1=0, select bank0
   937     002B  0099               	movwf	25	;volatile
   938                           
   939                           ;main.c: 71:         }
   940     002C  287E               	goto	i1l71
   941     002D                     i1l61:	
   942                           ;main.c: 73:         else if (PORTBbits.RB2 == 0){
   943                           
   944     002D  1906               	btfsc	6,2	;volatile
   945     002E  2830               	goto	u11_21
   946     002F  2831               	goto	u11_20
   947     0030                     u11_21:
   948     0030  2840               	goto	i1l63
   949     0031                     u11_20:
   950     0031                     i1l759:
   951                           
   952                           ;main.c: 74:             _delay((unsigned long)((10)*(500000/4000.0)));
   953     0031  30F9               	movlw	249
   954     0032  00F0               	movwf	??_isr
   955     0033                     u16_27:
   956     0033  2834               	nop2
   957     0034  0BF0               	decfsz	??_isr,f
   958     0035  2833               	goto	u16_27
   959     0036  2837               	nop2
   960     0037  2838               	nop2
   961                           
   962                           ;main.c: 77:             accion = 3;
   963     0038  3003               	movlw	3
   964     0039  00F4               	movwf	_accion
   965     003A                     i1l761:
   966                           
   967                           ;main.c: 78:             INTCONbits.RBIF = 0;
   968     003A  100B               	bcf	11,0	;volatile
   969                           
   970                           ;main.c: 79:             TXREG = accion;
   971     003B  0874               	movf	_accion,w
   972     003C  1283               	bcf	3,5	;RP0=0, select bank0
   973     003D  1303               	bcf	3,6	;RP1=0, select bank0
   974     003E  0099               	movwf	25	;volatile
   975                           
   976                           ;main.c: 81:         }
   977     003F  287E               	goto	i1l71
   978     0040                     i1l63:	
   979                           ;main.c: 83:         else if (PORTBbits.RB3 == 0){
   980                           
   981     0040  1986               	btfsc	6,3	;volatile
   982     0041  2843               	goto	u12_21
   983     0042  2844               	goto	u12_20
   984     0043                     u12_21:
   985     0043  2853               	goto	i1l65
   986     0044                     u12_20:
   987     0044                     i1l763:
   988                           
   989                           ;main.c: 84:             _delay((unsigned long)((10)*(500000/4000.0)));
   990     0044  30F9               	movlw	249
   991     0045  00F0               	movwf	??_isr
   992     0046                     u17_27:
   993     0046  2847               	nop2
   994     0047  0BF0               	decfsz	??_isr,f
   995     0048  2846               	goto	u17_27
   996     0049  284A               	nop2
   997     004A  284B               	nop2
   998                           
   999                           ;main.c: 87:             accion = 4;
  1000     004B  3004               	movlw	4
  1001     004C  00F4               	movwf	_accion
  1002     004D                     i1l765:
  1003                           
  1004                           ;main.c: 88:             INTCONbits.RBIF = 0;
  1005     004D  100B               	bcf	11,0	;volatile
  1006                           
  1007                           ;main.c: 89:             TXREG = accion;
  1008     004E  0874               	movf	_accion,w
  1009     004F  1283               	bcf	3,5	;RP0=0, select bank0
  1010     0050  1303               	bcf	3,6	;RP1=0, select bank0
  1011     0051  0099               	movwf	25	;volatile
  1012                           
  1013                           ;main.c: 91:         }
  1014     0052  287E               	goto	i1l71
  1015     0053                     i1l65:	
  1016                           ;main.c: 92:         else if (PORTBbits.RB4 == 0){
  1017                           
  1018     0053  1A06               	btfsc	6,4	;volatile
  1019     0054  2856               	goto	u13_21
  1020     0055  2857               	goto	u13_20
  1021     0056                     u13_21:
  1022     0056  2866               	goto	i1l67
  1023     0057                     u13_20:
  1024     0057                     i1l767:
  1025                           
  1026                           ;main.c: 93:             _delay((unsigned long)((10)*(500000/4000.0)));
  1027     0057  30F9               	movlw	249
  1028     0058  00F0               	movwf	??_isr
  1029     0059                     u18_27:
  1030     0059  285A               	nop2
  1031     005A  0BF0               	decfsz	??_isr,f
  1032     005B  2859               	goto	u18_27
  1033     005C  285D               	nop2
  1034     005D  285E               	nop2
  1035                           
  1036                           ;main.c: 96:             accion = 5;
  1037     005E  3005               	movlw	5
  1038     005F  00F4               	movwf	_accion
  1039     0060                     i1l769:
  1040                           
  1041                           ;main.c: 97:             INTCONbits.RBIF = 0;
  1042     0060  100B               	bcf	11,0	;volatile
  1043                           
  1044                           ;main.c: 98:             TXREG = accion;
  1045     0061  0874               	movf	_accion,w
  1046     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1047     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0064  0099               	movwf	25	;volatile
  1049                           
  1050                           ;main.c: 100:         }
  1051     0065  287E               	goto	i1l71
  1052     0066                     i1l67:	
  1053                           ;main.c: 101:         else if (PORTBbits.RB5 == 0){
  1054                           
  1055     0066  1A86               	btfsc	6,5	;volatile
  1056     0067  2869               	goto	u14_21
  1057     0068  286A               	goto	u14_20
  1058     0069                     u14_21:
  1059     0069  2879               	goto	i1l777
  1060     006A                     u14_20:
  1061     006A                     i1l771:
  1062                           
  1063                           ;main.c: 102:             _delay((unsigned long)((10)*(500000/4000.0)));
  1064     006A  30F9               	movlw	249
  1065     006B  00F0               	movwf	??_isr
  1066     006C                     u19_27:
  1067     006C  286D               	nop2
  1068     006D  0BF0               	decfsz	??_isr,f
  1069     006E  286C               	goto	u19_27
  1070     006F  2870               	nop2
  1071     0070  2871               	nop2
  1072     0071                     i1l773:
  1073                           
  1074                           ;main.c: 105:             accion = 1;
  1075     0071  01F4               	clrf	_accion
  1076     0072  0AF4               	incf	_accion,f
  1077     0073                     i1l775:
  1078                           
  1079                           ;main.c: 106:             INTCONbits.RBIF = 0;
  1080     0073  100B               	bcf	11,0	;volatile
  1081                           
  1082                           ;main.c: 107:             TXREG = accion;
  1083     0074  0874               	movf	_accion,w
  1084     0075  1283               	bcf	3,5	;RP0=0, select bank0
  1085     0076  1303               	bcf	3,6	;RP1=0, select bank0
  1086     0077  0099               	movwf	25	;volatile
  1087                           
  1088                           ;main.c: 109:         }
  1089     0078  287E               	goto	i1l71
  1090     0079                     i1l777:
  1091                           
  1092                           ;main.c: 111:             accion = 6;
  1093     0079  3006               	movlw	6
  1094     007A  00F4               	movwf	_accion
  1095                           
  1096                           ;main.c: 112:             TXREG = accion;
  1097     007B  0874               	movf	_accion,w
  1098     007C  0099               	movwf	25	;volatile
  1099     007D                     i1l779:
  1100                           
  1101                           ;main.c: 113:             INTCONbits.RBIF = 0;
  1102     007D  100B               	bcf	11,0	;volatile
  1103     007E                     i1l71:
  1104     007E  0872               	movf	??_isr+2,w
  1105     007F  008A               	movwf	10
  1106     0080  0E71               	swapf	??_isr+1,w
  1107     0081  0083               	movwf	3
  1108     0082  0EFE               	swapf	btemp,f
  1109     0083  0E7E               	swapf	btemp,w
  1110     0084  0009               	retfie
  1111     0085                     __end_of_isr:
  1112     007E                     btemp	set	126	;btemp
  1113     007E                     wtemp0	set	126
  1114                           
  1115                           	psect	intentry
  1116     0004                     __pintentry:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _isr: [wreg]
  1119                           
  1120     0004                     interrupt_function:
  1121     007E                     saved_w	set	btemp
  1122     0004  00FE               	movwf	btemp
  1123     0005  0E03               	swapf	3,w
  1124     0006  00F1               	movwf	??_isr+1
  1125     0007  080A               	movf	10,w
  1126     0008  00F2               	movwf	??_isr+2
  1127     0009  120A  118A  2814   	ljmp	_isr
  1128                           
  1129                           	psect	idloc
  1130                           
  1131                           ;Config register IDLOC0 @ 0x2000
  1132                           ;	unspecified, using default values
  1133     2000                     	org	8192
  1134     2000  3FFF               	dw	16383
  1135                           
  1136                           ;Config register IDLOC1 @ 0x2001
  1137                           ;	unspecified, using default values
  1138     2001                     	org	8193
  1139     2001  3FFF               	dw	16383
  1140                           
  1141                           ;Config register IDLOC2 @ 0x2002
  1142                           ;	unspecified, using default values
  1143     2002                     	org	8194
  1144     2002  3FFF               	dw	16383
  1145                           
  1146                           ;Config register IDLOC3 @ 0x2003
  1147                           ;	unspecified, using default values
  1148     2003                     	org	8195
  1149     2003  3FFF               	dw	16383
  1150                           
  1151                           	psect	config
  1152                           
  1153                           ;Config register CONFIG1 @ 0x2007
  1154                           ;	Oscillator Selection bits
  1155                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1156                           ;	Watchdog Timer Enable bit
  1157                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1158                           ;	Power-up Timer Enable bit
  1159                           ;	PWRTE = OFF, PWRT disabled
  1160                           ;	RE3/MCLR pin function select bit
  1161                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1162                           ;	Code Protection bit
  1163                           ;	CP = OFF, Program memory code protection is disabled
  1164                           ;	Data Code Protection bit
  1165                           ;	CPD = OFF, Data memory code protection is disabled
  1166                           ;	Brown Out Reset Selection bits
  1167                           ;	BOREN = OFF, BOR disabled
  1168                           ;	Internal External Switchover bit
  1169                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1170                           ;	Fail-Safe Clock Monitor Enabled bit
  1171                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1172                           ;	Low Voltage Programming Enable bit
  1173                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1174                           ;	In-Circuit Debugger Mode bit
  1175                           ;	DEBUG = 0x1, unprogramme  1176     2007                     	org	8199
  1177     2007  20D4               	dw	8404
  1178                           
  1179                           ;Config register CONFIG2 @ 0x2008
  1180                           ;	Brown-out Reset Selection bit
  1181                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1182                           ;	Flash Program Memory Self Write Enable bits
  1183                           ;	WRT = OFF, Write protection off
  1184     2008                     	org	8200
  1185     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupINTOSC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                           _initUART
                              _setup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup
   _setupINTOSC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 21 21:57:57 2023

                      l5 0090                        l6 009C                        l7 00A8  
                      l8 00B4                        l9 00C0                       l10 00CC  
                     l11 00D7                       l13 00E3                       l82 0101  
                     l76 0128                       l85 0117                       l77 0128  
                     u10 008C                       u11 008B                       u20 0096  
                     u21 0095                       u30 00A2                       u31 00A1  
                     u40 00AE                       u41 00AD                       u50 00BA  
                     u51 00B9                       u60 00C6                       u61 00C5  
                     u70 00D1                       u71 00D0                       u80 00DC  
                     u81 00DB                      l701 00EC                      l711 00F5  
                    l703 00EF                      l721 00FA                      l713 00F6  
                    l705 00F0                      l731 00FF                      l723 00FB  
                    l715 00F7                      l707 00F1                      l741 010A  
                    l733 0100                      l725 00FC                      l717 00F8  
                    l709 00F2                      l743 010D                      l735 0102  
                    l727 00FD                      l719 00F9                      l745 0110  
                    l737 0106                      l729 00FE                      l681 0096  
                    l747 0113                      l739 0107                      l691 00D1  
                    l683 00A2                      l749 0116                      l693 00DC  
                    l685 00AE                      l677 0086                      l781 0118  
                    l695 00E0                      l687 00BA                      l679 008C  
                    l697 00E4                      l689 00C6                      l699 00E8  
                    _isr 0014                     ?_isr 0070                     _RBIF 0058  
                   i1l61 002D                     i1l63 0040                     i1l71 007E  
                   i1l65 0053                     i1l67 0066                     u9_20 0018  
                   u9_21 0017                     _main 0118                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l751 0014                    i1l761 003A  
                  i1l753 0018                    i1l771 006A                    i1l763 0044  
                  i1l755 001E                    i1l773 0071                    i1l765 004D  
                  i1l757 0027                    i1l775 0073                    i1l767 0057  
                  i1l759 0031                    i1l777 0079                    i1l769 0060  
                  i1l779 007D                    u10_20 001E                    u10_21 001D  
                  u11_20 0031                    u11_21 0030                    u12_20 0044  
                  u12_21 0043                    u13_20 0057                    u13_21 0056  
                  u14_20 006A                    u14_21 0069                    u15_27 0020  
                  u16_27 0033                    u17_27 0046                    _SPBRG 0099  
                  u18_27 0059                    _PORTB 0006                    u19_27 006C  
                  _TRISB 0086                    _TXREG 0019                    _setup 00E4  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 012C                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _accion 0074  
       __end_of_initUART 0118             ?_setupINTOSC 0070                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_setup 0102  
         _OPTION_REGbits 0081                  ??_setup 0073               __pmaintext 0118  
             __pintentry 0004                ?_initUART 0070                  __ptext1 0085  
                __ptext2 00E4                  __ptext3 0102                  __ptext4 0014  
   end_of_initialization 0010               ??_initUART 0073                _RCSTAbits 0018  
              _PORTBbits 0006                _TXSTAbits 0098              _BAUDCTLbits 0187  
    start_initialization 000F              __end_of_isr 0085              __pbssCOMMON 0074  
              ___latbits 0002          setupINTOSC@IRCF 0073        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C            ??_setupINTOSC 0073  
               _WPUBbits 0095      __end_of_setupINTOSC 00E4                 _initUART 0102  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
            _setupINTOSC 0085  
