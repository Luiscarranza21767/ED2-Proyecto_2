

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 14 12:47:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     000C                     _PIR1bits	set	12
   287     0018                     _RCSTAbits	set	24
   288     0006                     _PORTB	set	6
   289     0019                     _TXREG	set	25
   290     000B                     _INTCONbits	set	11
   291     0006                     _PORTBbits	set	6
   292     0058                     _RBIF	set	88
   293     0098                     _TXSTAbits	set	152
   294     0099                     _SPBRG	set	153
   295     0081                     _OPTION_REGbits	set	129
   296     0096                     _IOCBbits	set	150
   297     0095                     _WPUBbits	set	149
   298     0086                     _TRISB	set	134
   299     008F                     _OSCCONbits	set	143
   300     0187                     _BAUDCTLbits	set	391
   301     0189                     _ANSELH	set	393
   302     0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305     000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308     000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311     000F  01F4               	clrf	__pbssCOMMON& (0+127)
   312     0010                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315     0010                     __end_of__initialization:
   316     0010  0183               	clrf	3
   317     0011  120A  118A  2900   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320     0074                     __pbssCOMMON:
   321     0074                     _accion:
   322     0074                     	ds	1
   323                           
   324                           	psect	cstackCOMMON
   325     0070                     __pcstackCOMMON:
   326     0070                     ?_setup:
   327     0070                     ?_initUART:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_setupINTOSC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344     0070                     	ds	3
   345     0073                     ??_setup:
   346     0073                     ??_initUART:	
   347                           ; 1 bytes @ 0x3
   348                           
   349     0073                     ??_setupINTOSC:	
   350                           ; 1 bytes @ 0x3
   351                           
   352     0073                     setupINTOSC@IRCF:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357     0073                     	ds	1
   358     0074                     ??_main:
   359                           
   360                           	psect	maintext
   361     0100                     __pmaintext:	
   362                           ; 1 bytes @ 0x4
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 102 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		_initUART
   390 ;;		_setup
   391 ;;		_setupINTOSC
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397     0100                     _main:	
   398                           ;psect for function _main
   399                           
   400     0100                     l765:	
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403                           
   404                           
   405                           ;main.c: 103:     setupINTOSC(3);
   406     0100  3003               	movlw	3
   407     0101  120A  118A  2014  120A  118A  	fcall	_setupINTOSC
   408                           
   409                           ;main.c: 104:     setup();
   410     0106  120A  118A  20D0  120A  118A  	fcall	_setup
   411                           
   412                           ;main.c: 105:     initUART();
   413     010B  120A  118A  20EA  120A  118A  	fcall	_initUART
   414     0110                     l74:	
   415                           ;main.c: 106:     while(1){
   416                           
   417     0110                     l75:	
   418                           ;main.c: 108:     }
   419                           
   420     0110  2910               	goto	l74
   421     0111  120A  118A  280C   	ljmp	start
   422     0114                     __end_of_main:
   423                           
   424                           	psect	text1
   425     0014                     __ptext1:	
   426 ;; *************** function _setupINTOSC *****************
   427 ;; Defined at:
   428 ;;		line 10 in file "oscilador.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  IRCF            1    wreg     unsigned char 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  IRCF            1    3[COMMON] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         1       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0
   445 ;;      Totals:         1       0       0       0       0
   446 ;;Total ram usage:        1 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     0014                     _setupINTOSC:	
   457                           ;psect for function _setupINTOSC
   458                           
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   462                           ;setupINTOSC@IRCF stored from wreg
   463     0014  00F3               	movwf	setupINTOSC@IRCF
   464     0015                     l675:
   465                           
   466                           ;oscilador.c: 11:     if (IRCF == 7){
   467     0015  3007               	movlw	7
   468     0016  0673               	xorwf	setupINTOSC@IRCF,w
   469     0017  1D03               	btfss	3,2
   470     0018  281A               	goto	u11
   471     0019  281B               	goto	u10
   472     001A                     u11:
   473     001A  281F               	goto	l5
   474     001B                     u10:
   475     001B                     l677:
   476                           
   477                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   478     001B  3070               	movlw	112
   479     001C  1683               	bsf	3,5	;RP0=1, select bank1
   480     001D  1303               	bcf	3,6	;RP1=0, select bank1
   481     001E  048F               	iorwf	15,f	;volatile
   482     001F                     l5:	
   483                           ;oscilador.c: 13:     }
   484                           
   485                           
   486                           ;oscilador.c: 14:     if (IRCF == 6){
   487     001F  3006               	movlw	6
   488     0020  0673               	xorwf	setupINTOSC@IRCF,w
   489     0021  1D03               	btfss	3,2
   490     0022  2824               	goto	u21
   491     0023  2825               	goto	u20
   492     0024                     u21:
   493     0024  282B               	goto	l6
   494     0025                     u20:
   495     0025                     l679:
   496                           
   497                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   498     0025  1683               	bsf	3,5	;RP0=1, select bank1
   499     0026  1303               	bcf	3,6	;RP1=0, select bank1
   500     0027  080F               	movf	15,w	;volatile
   501     0028  398F               	andlw	-113
   502     0029  3860               	iorlw	96
   503     002A  008F               	movwf	15	;volatile
   504     002B                     l6:	
   505                           ;oscilador.c: 16:     }
   506                           
   507                           
   508                           ;oscilador.c: 17:     if (IRCF == 5){
   509     002B  3005               	movlw	5
   510     002C  0673               	xorwf	setupINTOSC@IRCF,w
   511     002D  1D03               	btfss	3,2
   512     002E  2830               	goto	u31
   513     002F  2831               	goto	u30
   514     0030                     u31:
   515     0030  2837               	goto	l7
   516     0031                     u30:
   517     0031                     l681:
   518                           
   519                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   520     0031  1683               	bsf	3,5	;RP0=1, select bank1
   521     0032  1303               	bcf	3,6	;RP1=0, select bank1
   522     0033  080F               	movf	15,w	;volatile
   523     0034  398F               	andlw	-113
   524     0035  3850               	iorlw	80
   525     0036  008F               	movwf	15	;volatile
   526     0037                     l7:	
   527                           ;oscilador.c: 19:     }
   528                           
   529                           
   530                           ;oscilador.c: 20:     if (IRCF == 4){
   531     0037  3004               	movlw	4
   532     0038  0673               	xorwf	setupINTOSC@IRCF,w
   533     0039  1D03               	btfss	3,2
   534     003A  283C               	goto	u41
   535     003B  283D               	goto	u40
   536     003C                     u41:
   537     003C  2843               	goto	l8
   538     003D                     u40:
   539     003D                     l683:
   540                           
   541                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   542     003D  1683               	bsf	3,5	;RP0=1, select bank1
   543     003E  1303               	bcf	3,6	;RP1=0, select bank1
   544     003F  080F               	movf	15,w	;volatile
   545     0040  398F               	andlw	-113
   546     0041  3840               	iorlw	64
   547     0042  008F               	movwf	15	;volatile
   548     0043                     l8:	
   549                           ;oscilador.c: 22:     }
   550                           
   551                           
   552                           ;oscilador.c: 23:     if (IRCF == 3){
   553     0043  3003               	movlw	3
   554     0044  0673               	xorwf	setupINTOSC@IRCF,w
   555     0045  1D03               	btfss	3,2
   556     0046  2848               	goto	u51
   557     0047  2849               	goto	u50
   558     0048                     u51:
   559     0048  284F               	goto	l9
   560     0049                     u50:
   561     0049                     l685:
   562                           
   563                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   564     0049  1683               	bsf	3,5	;RP0=1, select bank1
   565     004A  1303               	bcf	3,6	;RP1=0, select bank1
   566     004B  080F               	movf	15,w	;volatile
   567     004C  398F               	andlw	-113
   568     004D  3830               	iorlw	48
   569     004E  008F               	movwf	15	;volatile
   570     004F                     l9:	
   571                           ;oscilador.c: 25:     }
   572                           
   573                           
   574                           ;oscilador.c: 26:     if (IRCF == 2){
   575     004F  3002               	movlw	2
   576     0050  0673               	xorwf	setupINTOSC@IRCF,w
   577     0051  1D03               	btfss	3,2
   578     0052  2854               	goto	u61
   579     0053  2855               	goto	u60
   580     0054                     u61:
   581     0054  285B               	goto	l10
   582     0055                     u60:
   583     0055                     l687:
   584                           
   585                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   586     0055  1683               	bsf	3,5	;RP0=1, select bank1
   587     0056  1303               	bcf	3,6	;RP1=0, select bank1
   588     0057  080F               	movf	15,w	;volatile
   589     0058  398F               	andlw	-113
   590     0059  3820               	iorlw	32
   591     005A  008F               	movwf	15	;volatile
   592     005B                     l10:	
   593                           ;oscilador.c: 28:     }
   594                           
   595                           
   596                           ;oscilador.c: 29:     if (IRCF == 1){
   597     005B  0373               	decf	setupINTOSC@IRCF,w
   598     005C  1D03               	btfss	3,2
   599     005D  285F               	goto	u71
   600     005E  2860               	goto	u70
   601     005F                     u71:
   602     005F  2866               	goto	l11
   603     0060                     u70:
   604     0060                     l689:
   605                           
   606                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
   607     0060  1683               	bsf	3,5	;RP0=1, select bank1
   608     0061  1303               	bcf	3,6	;RP1=0, select bank1
   609     0062  080F               	movf	15,w	;volatile
   610     0063  398F               	andlw	-113
   611     0064  3810               	iorlw	16
   612     0065  008F               	movwf	15	;volatile
   613     0066                     l11:	
   614                           ;oscilador.c: 31:     }
   615                           
   616                           
   617                           ;oscilador.c: 32:     if (IRCF == 0){
   618     0066  0873               	movf	setupINTOSC@IRCF,w
   619     0067  1D03               	btfss	3,2
   620     0068  286A               	goto	u81
   621     0069  286B               	goto	u80
   622     006A                     u81:
   623     006A  286F               	goto	l693
   624     006B                     u80:
   625     006B                     l691:
   626                           
   627                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
   628     006B  308F               	movlw	-113
   629     006C  1683               	bsf	3,5	;RP0=1, select bank1
   630     006D  1303               	bcf	3,6	;RP1=0, select bank1
   631     006E  058F               	andwf	15,f	;volatile
   632     006F                     l693:
   633                           
   634                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
   635     006F  1683               	bsf	3,5	;RP0=1, select bank1
   636     0070  1303               	bcf	3,6	;RP1=0, select bank1
   637     0071  140F               	bsf	15,0	;volatile
   638     0072                     l13:
   639     0072  0008               	return
   640     0073                     __end_of_setupINTOSC:
   641                           
   642                           	psect	text2
   643     00D0                     __ptext2:	
   644 ;; *************** function _setup *****************
   645 ;; Defined at:
   646 ;;		line 114 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674     00D0                     _setup:	
   675                           ;psect for function _setup
   676                           
   677     00D0                     l695:	
   678                           ;incstack = 0
   679                           ; Regs used in _setup: [wreg+status,2]
   680                           
   681                           
   682                           ;main.c: 116:     ANSEL = 0;
   683     00D0  1683               	bsf	3,5	;RP0=1, select bank3
   684     00D1  1703               	bsf	3,6	;RP1=1, select bank3
   685     00D2  0188               	clrf	8	;volatile
   686                           
   687                           ;main.c: 117:     ANSELH = 0;
   688     00D3  0189               	clrf	9	;volatile
   689     00D4                     l697:
   690                           
   691                           ;main.c: 118:     TRISB = 0b00001111;
   692     00D4  300F               	movlw	15
   693     00D5  1683               	bsf	3,5	;RP0=1, select bank1
   694     00D6  1303               	bcf	3,6	;RP1=0, select bank1
   695     00D7  0086               	movwf	6	;volatile
   696     00D8                     l699:
   697                           
   698                           ;main.c: 119:     PORTB = 0;
   699     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   700     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   701     00DA  0186               	clrf	6	;volatile
   702     00DB                     l701:
   703                           
   704                           ;main.c: 121:     INTCONbits.RBIE = 1;
   705     00DB  158B               	bsf	11,3	;volatile
   706     00DC                     l703:
   707                           
   708                           ;main.c: 122:     INTCONbits.RBIF = 0;
   709     00DC  100B               	bcf	11,0	;volatile
   710     00DD                     l705:
   711                           
   712                           ;main.c: 123:     INTCONbits.GIE = 1;
   713     00DD  178B               	bsf	11,7	;volatile
   714     00DE                     l707:
   715                           
   716                           ;main.c: 125:     WPUBbits.WPUB0 = 1;
   717     00DE  1683               	bsf	3,5	;RP0=1, select bank1
   718     00DF  1303               	bcf	3,6	;RP1=0, select bank1
   719     00E0  1415               	bsf	21,0	;volatile
   720     00E1                     l709:
   721                           
   722                           ;main.c: 126:     IOCBbits.IOCB0 = 1;
   723     00E1  1416               	bsf	22,0	;volatile
   724     00E2                     l711:
   725                           
   726                           ;main.c: 127:     WPUBbits.WPUB1 = 1;
   727     00E2  1495               	bsf	21,1	;volatile
   728     00E3                     l713:
   729                           
   730                           ;main.c: 128:     IOCBbits.IOCB1 = 1;
   731     00E3  1496               	bsf	22,1	;volatile
   732     00E4                     l715:
   733                           
   734                           ;main.c: 129:     WPUBbits.WPUB2 = 1;
   735     00E4  1515               	bsf	21,2	;volatile
   736     00E5                     l717:
   737                           
   738                           ;main.c: 130:     IOCBbits.IOCB2 = 1;
   739     00E5  1516               	bsf	22,2	;volatile
   740     00E6                     l719:
   741                           
   742                           ;main.c: 131:     WPUBbits.WPUB3 = 1;
   743     00E6  1595               	bsf	21,3	;volatile
   744     00E7                     l721:
   745                           
   746                           ;main.c: 132:     IOCBbits.IOCB3 = 1;
   747     00E7  1596               	bsf	22,3	;volatile
   748     00E8                     l723:
   749                           
   750                           ;main.c: 134:     OPTION_REGbits.nRBPU = 0;
   751     00E8  1381               	bcf	1,7	;volatile
   752     00E9                     l80:
   753     00E9  0008               	return
   754     00EA                     __end_of_setup:
   755                           
   756                           	psect	text3
   757     00EA                     __ptext3:	
   758 ;; *************** function _initUART *****************
   759 ;; Defined at:
   760 ;;		line 143 in file "main.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788     00EA                     _initUART:	
   789                           ;psect for function _initUART
   790                           
   791     00EA                     l725:	
   792                           ;incstack = 0
   793                           ; Regs used in _initUART: [wreg]
   794                           
   795                           
   796                           ;main.c: 145:     SPBRG = 12;
   797     00EA  300C               	movlw	12
   798     00EB  1683               	bsf	3,5	;RP0=1, select bank1
   799     00EC  1303               	bcf	3,6	;RP1=0, select bank1
   800     00ED  0099               	movwf	25	;volatile
   801     00EE                     l727:
   802                           
   803                           ;main.c: 147:     TXSTAbits.SYNC = 0;
   804     00EE  1218               	bcf	24,4	;volatile
   805     00EF                     l729:
   806                           
   807                           ;main.c: 148:     RCSTAbits.SPEN = 1;
   808     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   809     00F0  1303               	bcf	3,6	;RP1=0, select bank0
   810     00F1  1798               	bsf	24,7	;volatile
   811     00F2                     l731:
   812                           
   813                           ;main.c: 150:     TXSTAbits.BRGH = 1;
   814     00F2  1683               	bsf	3,5	;RP0=1, select bank1
   815     00F3  1303               	bcf	3,6	;RP1=0, select bank1
   816     00F4  1518               	bsf	24,2	;volatile
   817     00F5                     l733:
   818                           
   819                           ;main.c: 151:     BAUDCTLbits.BRG16 = 1;
   820     00F5  1683               	bsf	3,5	;RP0=1, select bank3
   821     00F6  1703               	bsf	3,6	;RP1=1, select bank3
   822     00F7  1587               	bsf	7,3	;volatile
   823     00F8                     l735:
   824                           
   825                           ;main.c: 153:     TXSTAbits.TXEN = 1;
   826     00F8  1683               	bsf	3,5	;RP0=1, select bank1
   827     00F9  1303               	bcf	3,6	;RP1=0, select bank1
   828     00FA  1698               	bsf	24,5	;volatile
   829     00FB                     l737:
   830                           
   831                           ;main.c: 154:     PIR1bits.TXIF = 0;
   832     00FB  1283               	bcf	3,5	;RP0=0, select bank0
   833     00FC  1303               	bcf	3,6	;RP1=0, select bank0
   834     00FD  120C               	bcf	12,4	;volatile
   835     00FE                     l739:
   836                           
   837                           ;main.c: 155:     RCSTAbits.CREN = 1;
   838     00FE  1618               	bsf	24,4	;volatile
   839     00FF                     l83:
   840     00FF  0008               	return
   841     0100                     __end_of_initUART:
   842                           
   843                           	psect	text4
   844     0073                     __ptext4:	
   845 ;; *************** function _isr *****************
   846 ;; Defined at:
   847 ;;		line 50 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          3       0       0       0       0
   864 ;;      Totals:         3       0       0       0       0
   865 ;;Total ram usage:        3 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		Interrupt level 1
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874     0073                     _isr:	
   875                           ;psect for function _isr
   876                           
   877     0073                     i1l741:
   878                           
   879                           ;main.c: 53:     if (RBIF == 1){
   880     0073  1C0B               	btfss	11,0	;volatile
   881     0074  2876               	goto	u9_21
   882     0075  2877               	goto	u9_20
   883     0076                     u9_21:
   884     0076  28C9               	goto	i1l69
   885     0077                     u9_20:
   886     0077                     i1l743:
   887                           
   888                           ;main.c: 54:         if (PORTBbits.RB0 == 0){
   889     0077  1283               	bcf	3,5	;RP0=0, select bank0
   890     0078  1303               	bcf	3,6	;RP1=0, select bank0
   891     0079  1806               	btfsc	6,0	;volatile
   892     007A  287C               	goto	u10_21
   893     007B  287D               	goto	u10_20
   894     007C                     u10_21:
   895     007C  288C               	goto	i1l61
   896     007D                     u10_20:
   897     007D                     i1l745:
   898                           
   899                           ;main.c: 55:             _delay((unsigned long)((10)*(500000/4000.0)));
   900     007D  30F9               	movlw	249
   901     007E  00F0               	movwf	??_isr
   902     007F                     u14_27:
   903     007F  2880               	nop2
   904     0080  0BF0               	decfsz	??_isr,f
   905     0081  287F               	goto	u14_27
   906     0082  2883               	nop2
   907     0083  2884               	nop2
   908     0084                     i1l747:
   909                           
   910                           ;main.c: 58:             accion = 1;
   911     0084  01F4               	clrf	_accion
   912     0085  0AF4               	incf	_accion,f
   913     0086                     i1l749:
   914                           
   915                           ;main.c: 59:             INTCONbits.RBIF = 0;
   916     0086  100B               	bcf	11,0	;volatile
   917                           
   918                           ;main.c: 60:             TXREG = accion;
   919     0087  0874               	movf	_accion,w
   920     0088  1283               	bcf	3,5	;RP0=0, select bank0
   921     0089  1303               	bcf	3,6	;RP1=0, select bank0
   922     008A  0099               	movwf	25	;volatile
   923                           
   924                           ;main.c: 62:         }
   925     008B  28C9               	goto	i1l69
   926     008C                     i1l61:	
   927                           ;main.c: 63:         else if (PORTBbits.RB1 == 0){
   928                           
   929     008C  1886               	btfsc	6,1	;volatile
   930     008D  288F               	goto	u11_21
   931     008E  2890               	goto	u11_20
   932     008F                     u11_21:
   933     008F  289F               	goto	i1l63
   934     0090                     u11_20:
   935     0090                     i1l751:
   936                           
   937                           ;main.c: 64:             _delay((unsigned long)((10)*(500000/4000.0)));
   938     0090  30F9               	movlw	249
   939     0091  00F0               	movwf	??_isr
   940     0092                     u15_27:
   941     0092  2893               	nop2
   942     0093  0BF0               	decfsz	??_isr,f
   943     0094  2892               	goto	u15_27
   944     0095  2896               	nop2
   945     0096  2897               	nop2
   946                           
   947                           ;main.c: 67:             accion = 2;
   948     0097  3002               	movlw	2
   949     0098  00F4               	movwf	_accion
   950     0099                     i1l753:
   951                           
   952                           ;main.c: 68:             INTCONbits.RBIF = 0;
   953     0099  100B               	bcf	11,0	;volatile
   954                           
   955                           ;main.c: 69:             TXREG = accion;
   956     009A  0874               	movf	_accion,w
   957     009B  1283               	bcf	3,5	;RP0=0, select bank0
   958     009C  1303               	bcf	3,6	;RP1=0, select bank0
   959     009D  0099               	movwf	25	;volatile
   960                           
   961                           ;main.c: 71:         }
   962     009E  28C9               	goto	i1l69
   963     009F                     i1l63:	
   964                           ;main.c: 73:         else if (PORTBbits.RB2 == 0){
   965                           
   966     009F  1906               	btfsc	6,2	;volatile
   967     00A0  28A2               	goto	u12_21
   968     00A1  28A3               	goto	u12_20
   969     00A2                     u12_21:
   970     00A2  28B2               	goto	i1l65
   971     00A3                     u12_20:
   972     00A3                     i1l755:
   973                           
   974                           ;main.c: 74:             _delay((unsigned long)((10)*(500000/4000.0)));
   975     00A3  30F9               	movlw	249
   976     00A4  00F0               	movwf	??_isr
   977     00A5                     u16_27:
   978     00A5  28A6               	nop2
   979     00A6  0BF0               	decfsz	??_isr,f
   980     00A7  28A5               	goto	u16_27
   981     00A8  28A9               	nop2
   982     00A9  28AA               	nop2
   983                           
   984                           ;main.c: 77:             accion = 3;
   985     00AA  3003               	movlw	3
   986     00AB  00F4               	movwf	_accion
   987     00AC                     i1l757:
   988                           
   989                           ;main.c: 78:             INTCONbits.RBIF = 0;
   990     00AC  100B               	bcf	11,0	;volatile
   991                           
   992                           ;main.c: 79:             TXREG = accion;
   993     00AD  0874               	movf	_accion,w
   994     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   995     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   996     00B0  0099               	movwf	25	;volatile
   997                           
   998                           ;main.c: 81:         }
   999     00B1  28C9               	goto	i1l69
  1000     00B2                     i1l65:	
  1001                           ;main.c: 83:         else if (PORTBbits.RB3 == 0){
  1002                           
  1003     00B2  1986               	btfsc	6,3	;volatile
  1004     00B3  28B5               	goto	u13_21
  1005     00B4  28B6               	goto	u13_20
  1006     00B5                     u13_21:
  1007     00B5  28C5               	goto	i1l763
  1008     00B6                     u13_20:
  1009     00B6                     i1l759:
  1010                           
  1011                           ;main.c: 84:             _delay((unsigned long)((10)*(500000/4000.0)));
  1012     00B6  30F9               	movlw	249
  1013     00B7  00F0               	movwf	??_isr
  1014     00B8                     u17_27:
  1015     00B8  28B9               	nop2
  1016     00B9  0BF0               	decfsz	??_isr,f
  1017     00BA  28B8               	goto	u17_27
  1018     00BB  28BC               	nop2
  1019     00BC  28BD               	nop2
  1020                           
  1021                           ;main.c: 87:             accion = 4;
  1022     00BD  3004               	movlw	4
  1023     00BE  00F4               	movwf	_accion
  1024     00BF                     i1l761:
  1025                           
  1026                           ;main.c: 88:             INTCONbits.RBIF = 0;
  1027     00BF  100B               	bcf	11,0	;volatile
  1028                           
  1029                           ;main.c: 89:             TXREG = accion;
  1030     00C0  0874               	movf	_accion,w
  1031     00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1032     00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1033     00C3  0099               	movwf	25	;volatile
  1034                           
  1035                           ;main.c: 91:         }
  1036     00C4  28C9               	goto	i1l69
  1037     00C5                     i1l763:
  1038                           
  1039                           ;main.c: 93:             accion = 6;
  1040     00C5  3006               	movlw	6
  1041     00C6  00F4               	movwf	_accion
  1042                           
  1043                           ;main.c: 94:             TXREG = accion;
  1044     00C7  0874               	movf	_accion,w
  1045     00C8  0099               	movwf	25	;volatile
  1046     00C9                     i1l69:
  1047     00C9  0872               	movf	??_isr+2,w
  1048     00CA  008A               	movwf	10
  1049     00CB  0E71               	swapf	??_isr+1,w
  1050     00CC  0083               	movwf	3
  1051     00CD  0EFE               	swapf	btemp,f
  1052     00CE  0E7E               	swapf	btemp,w
  1053     00CF  0009               	retfie
  1054     00D0                     __end_of_isr:
  1055     007E                     btemp	set	126	;btemp
  1056     007E                     wtemp0	set	126
  1057                           
  1058                           	psect	intentry
  1059     0004                     __pintentry:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _isr: [wreg]
  1062                           
  1063     0004                     interrupt_function:
  1064     007E                     saved_w	set	btemp
  1065     0004  00FE               	movwf	btemp
  1066     0005  0E03               	swapf	3,w
  1067     0006  00F1               	movwf	??_isr+1
  1068     0007  080A               	movf	10,w
  1069     0008  00F2               	movwf	??_isr+2
  1070     0009  120A  118A  2873   	ljmp	_isr
  1071                           
  1072                           	psect	idloc
  1073                           
  1074                           ;Config register IDLOC0 @ 0x2000
  1075                           ;	unspecified, using default values
  1076     2000                     	org	8192
  1077     2000  3FFF               	dw	16383
  1078                           
  1079                           ;Config register IDLOC1 @ 0x2001
  1080                           ;	unspecified, using default values
  1081     2001                     	org	8193
  1082     2001  3FFF               	dw	16383
  1083                           
  1084                           ;Config register IDLOC2 @ 0x2002
  1085                           ;	unspecified, using default values
  1086     2002                     	org	8194
  1087     2002  3FFF               	dw	16383
  1088                           
  1089                           ;Config register IDLOC3 @ 0x2003
  1090                           ;	unspecified, using default values
  1091     2003                     	org	8195
  1092     2003  3FFF               	dw	16383
  1093                           
  1094                           	psect	config
  1095                           
  1096                           ;Config register CONFIG1 @ 0x2007
  1097                           ;	Oscillator Selection bits
  1098                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1099                           ;	Watchdog Timer Enable bit
  1100                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1101                           ;	Power-up Timer Enable bit
  1102                           ;	PWRTE = OFF, PWRT disabled
  1103                           ;	RE3/MCLR pin function select bit
  1104                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1105                           ;	Code Protection bit
  1106                           ;	CP = OFF, Program memory code protection is disabled
  1107                           ;	Data Code Protection bit
  1108                           ;	CPD = OFF, Data memory code protection is disabled
  1109                           ;	Brown Out Reset Selection bits
  1110                           ;	BOREN = OFF, BOR disabled
  1111                           ;	Internal External Switchover bit
  1112                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1113                           ;	Fail-Safe Clock Monitor Enabled bit
  1114                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1115                           ;	Low Voltage Programming Enable bit
  1116                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1117                           ;	In-Circuit Debugger Mode bit
  1118                           ;	DEBUG = 0x1, unprogramme  1119     2007                     	org	8199
  1120     2007  20D4               	dw	8404
  1121                           
  1122                           ;Config register CONFIG2 @ 0x2008
  1123                           ;	Brown-out Reset Selection bit
  1124                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1125                           ;	Flash Program Memory Self Write Enable bits
  1126                           ;	WRT = OFF, Write protection off
  1127     2008                     	org	8200
  1128     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupINTOSC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                           _initUART
                              _setup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup
   _setupINTOSC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 14 12:47:30 2023

                      l5 001F                        l6 002B                        l7 0037  
                      l8 0043                        l9 004F                       l10 005B  
                     l11 0066                       l13 0072                       l80 00E9  
                     l74 0110                       l83 00FF                       l75 0110  
                     u10 001B                       u11 001A                       u20 0025  
                     u21 0024                       u30 0031                       u31 0030  
                     u40 003D                       u41 003C                       u50 0049  
                     u51 0048                       u60 0055                       u61 0054  
                     u70 0060                       u71 005F                       u80 006B  
                     u81 006A                      l701 00DB                      l711 00E2  
                    l703 00DC                      l721 00E7                      l713 00E3  
                    l705 00DD                      l731 00F2                      l723 00E8  
                    l715 00E4                      l707 00DE                      l733 00F5  
                    l725 00EA                      l717 00E5                      l709 00E1  
                    l735 00F8                      l727 00EE                      l719 00E6  
                    l737 00FB                      l729 00EF                      l681 0031  
                    l739 00FE                      l691 006B                      l683 003D  
                    l675 0015                      l693 006F                      l685 0049  
                    l677 001B                      l765 0100                      l695 00D0  
                    l687 0055                      l679 0025                      l697 00D4  
                    l689 0060                      l699 00D8                      _isr 0073  
                   ?_isr 0070                     _RBIF 0058                     i1l61 008C  
                   i1l63 009F                     i1l65 00B2                     i1l69 00C9  
                   u9_20 0077                     u9_21 0076                     _main 0100  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l741 0073  
                  i1l751 0090                    i1l743 0077                    i1l761 00BF  
                  i1l753 0099                    i1l745 007D                    i1l763 00C5  
                  i1l755 00A3                    i1l747 0084                    i1l757 00AC  
                  i1l749 0086                    i1l759 00B6                    u10_20 007D  
                  u10_21 007C                    u11_20 0090                    u11_21 008F  
                  u12_20 00A3                    u12_21 00A2                    u13_20 00B6  
                  u13_21 00B5                    u14_27 007F                    u15_27 0092  
                  u16_27 00A5                    u17_27 00B8                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  _setup 00D0                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0114  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _accion 0074         __end_of_initUART 0100             ?_setupINTOSC 0070  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_setup 00EA           _OPTION_REGbits 0081                  ??_setup 0073  
             __pmaintext 0100               __pintentry 0004                ?_initUART 0070  
                __ptext1 0014                  __ptext2 00D0                  __ptext3 00EA  
                __ptext4 0073     end_of_initialization 0010               ??_initUART 0073  
              _RCSTAbits 0018                _PORTBbits 0006                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 00D0  
            __pbssCOMMON 0074                ___latbits 0002          setupINTOSC@IRCF 0073  
      interrupt_function 0004                 _IOCBbits 0096                 _PIR1bits 000C  
          ??_setupINTOSC 0073                 _WPUBbits 0095      __end_of_setupINTOSC 0073  
               _initUART 00EA               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _setupINTOSC 0014  
